{
  "Logging": {
    "IncludeScopes": false,
    "Debug": {
      "LogLevel": {
        "Default": "Warning"
      }
    },
    "Console": {
      "LogLevel": {
        "Default": "Warning"
      }
    }
  },
  "OpenIdConnectOptions": {
    "ClientId": "oidc-code-flow",
    // For demo purpose only. You should store client secret somewhere that is more secure.
    "ClientSecret": "client_secret",
    "ResponseType": "code",
    "RequireNonce": "true",
    "ResponseMode": "",
    "AuthorizationEndpointMethod": "GET", // GET or POST
    "TokenAuthnMethod": "client_secret_post", // or client_secret_basic or private_key_jwt
    // Note that Identify OAuth server encrypts the ID token by using the public key from the jwks or jwks_uri configured in the Identify OAuth/OIDC connection. So the jwks or jwks_uri must contain the public certificate which corresponds to the bellow configured ID token decryption certificate.
    "IdTokenDecryptionCertPath": "",
    "IdTokenDecryptionCertPassword": "",
    // Certificate to sign the client_assertion for the private_key_jwt authentication method, the jwks or jwks_uri must contain the public certificate (use=sig) which corresponds to the bellow configured Jwt Assertion Signing certificate.
    "JwtAssertionSigningCertPath": "", // required for private_key_jwt authentication method
    "JwtAssertionSigningCertPassword": "", // required for private_key_jwt authentication method
    "ClaimsIssuer": "https://dev.safewhere.local/runtime/oauth2",
    "IssuerDomain": "https://dev.safewhere.local",
    "Scope": "openid",
    "EnableSessionManagement": "false",
    "EnablePostLogout": "true",
    "CheckSessionIframeUri": "https://dev.safewhere.local/runtime/openidconnect/sessionlogout.idp"
  }
}
